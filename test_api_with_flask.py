import requests
import json
from flask import Flask, jsonify, request

app = Flask(__name__)

DJANGO_API_URL = 'http://localhost:8000'

API_PATHS = {
    'users': '/users/',
    'users_register': '/users/register/',
    'token_login': '/users/token/login/',
    'posts': '/post/',
    'comments': '/comment/',
}


def test_api():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API —á–µ—Ä–µ–∑ Flask...")
    print(f"üîó –ë–∞–∑–æ–≤—ã–π URL: {DJANGO_API_URL}")

    test_endpoints()

    return jsonify({"message": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å."})


def test_endpoints():
    print("\nüë• –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    test_users()

    print("\nüìù –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–û–í")
    test_posts()

    print("\nüí¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í")
    test_comments()


def test_users():
    try:
        # 1. –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = {
            "login": f"flask_test_user_{requests.utils.quote('test')}",
            "email": "flask_test@mail.ru",
            "password": "Password123",  # –ü–∞—Ä–æ–ª—å —Å —Ü–∏—Ñ—Ä–æ–π –∏ –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤–æ–π
            "password_confirm": "Password123"
        }

        print(f"üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_data['login']}")
        response = requests.post(
            DJANGO_API_URL + API_PATHS['users_register'],
            json=user_data,
            timeout=5
        )

        print(f"POST {API_PATHS['users_register']} - Status: {response.status_code}")

        if response.status_code == 201:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
            test_auth(user_data['login'], user_data['password'])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")


def test_auth(login, password):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    try:
        auth_data = {
            "login": login,
            "password": password
        }
        response = requests.post(
            DJANGO_API_URL + API_PATHS['token_login'],
            json=auth_data,
            timeout=5
        )

        print(f"POST {API_PATHS['token_login']} - Status: {response.status_code}")

        if response.status_code == 200:
            token = response.json().get('token')
            print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
            return token
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
    return None


def test_posts():
    try:
        response = requests.get(
            DJANGO_API_URL + API_PATHS['posts'],
            timeout=5
        )
        print(f"GET {API_PATHS['posts']} - Status: {response.status_code}")

        if response.status_code == 200:
            posts = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ—Å—Ç–æ–≤: {e}")


def test_comments():
    try:
        response = requests.get(
            DJANGO_API_URL + API_PATHS['comments'],
            timeout=5
        )
        print(f"GET {API_PATHS['comments']} - Status: {response.status_code}")

        if response.status_code == 200:
            comments = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {e}")


@app.route('/')
def home():
    return test_api()


@app.route('/test/simple')
def test_simple():
    """–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print("üß™ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç)
    test_comments()

    # –ü—Ä–æ–±—É–µ–º –ø–æ—Å—Ç—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    try:
        response = requests.get(DJANGO_API_URL + API_PATHS['posts'])
        if response.status_code == 500:
            print("‚ö†Ô∏è  –ü–æ—Å—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 500 - –Ω—É–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Django")
        else:
            print(f"üìù –ü–æ—Å—Ç—ã: Status {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å—Ç–æ–≤: {e}")

    return jsonify({"message": "–ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"})


if __name__ == '__main__':
    print("üåê –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...")
    app.run(debug=True, port=5000)
